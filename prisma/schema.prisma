// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id      String  @id @default(cuid())
  doProf  Boolean
  doInst  Boolean
  doAdmin Boolean

  user User?

  @@map("roles")
}

model Avatar {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User?

  @@map("avatars")
}

model User {
  id        String @id @default(cuid())
  email     String @unique @map("email") @db.VarChar(255)
  firstName String @map("first_name")
  lastName  String @map("last_name")
  password  String @map("password") @db.Text

  avatar   Avatar @relation(fields: [avatarId], references: [id])
  avatarId String @unique @map("avatar_id")

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String @unique @map("role_id")

  isVerified Boolean @default(false) @map("is_verified")
  tokenVerif String? @map("token_verif") @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Resource {
  id          String  @id @default(cuid())
  url         String
  description String?

  course Course?
  lesson Lesson?
  docs   Docs?

  @@map("resources")
}

model Course {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  skills      String

  resources Resource @relation(fields: [img], references: [id])
  img       String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lessons Lesson[]

  @@map("courses")
}

model Lesson {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  content     String

  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  resources Resource @relation(fields: [video], references: [id])
  video     String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  docs Docs[]

  @@map("lessons")
}

model Docs {
  id    Int    @id @default(autoincrement())
  title String

  resources Resource @relation(fields: [document], references: [id])
  document  String   @unique

  leasson  Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("docs")
}
